useReducer Hook

The useReducer Hook is similar to the useState Hook.

It allows for custom state logic.

useReducer returns an array that holds the current state value and a dispatch function to which you can pass an action and later invoke it. 



If you find yourself keeping track of multiple pieces of state that rely on complex logic, useReducer may be useful.

useReducer Hook accepts two arguments.

useReducer(<reducer>, <initialState>)

The reducer function contains your custom state logic and the initialState can be a simple value but generally will contain an object.
initialState  = object{}
reducer function = custom state logic


The useReducer Hook returns the current state and a dispatchmethod.

How does the useReducer Hook work?

The useReducer Hook is used to store and update states, just like the useState Hook. 

It accepts a reducer function as its first parameter and the initial state as the second.

useReducer returns an array that holds the current state value and a dispatch function to which you can pass an action and later invoke it.
While this is similar to the pattern Redux uses, there are a few differences.



